
    <!DOCTYPE html>
    <html>
    <head>
        <title>Address Selection</title>
        <style>
            body {
                margin: 0;
            }

            .sb-title {
                position: relative;
                top: -12px;
                font-family: Roboto, sans-serif;
                font-weight: 500;
            }

            .sb-title-icon {
                position: relative;
                top: -5px;
            }

            .card-container {
                display: flex;
                height: 500px;
                width: 600px;
            }

            .panel {
                background: white;
                width: 300px;
                padding: 20px;
                display: flex;
                flex-direction: column;
                justify-content: space-around;
            }

            .half-input-container {
                display: flex;
                justify-content: space-between;
            }

            .half-input {
                max-width: 120px;
            }

            .map {
                width: 300px;
            }

            h2 {
                margin: 0;
                font-family: Roboto, sans-serif;
            }

            input {
                height: 30px;
            }

            input {
                border: 0;
                border-bottom: 1px solid black;
                font-size: 14px;
                font-family: Roboto, sans-serif;
                font-style: normal;
                font-weight: normal;
            }

                input:focus::placeholder {
                    color: white;
                }

            .button-cta {
                height: 40px;
                width: 40%;
                background: #3367d6;
                color: white;
                font-size: 15px;
                text-transform: uppercase;
                font-family: Roboto, sans-serif;
                border: 0;
                border-radius: 3px;
                box-shadow: 0 4px 8px 0 rgba(0,0,0,0.48);
                cursor: pointer;
            }
        </style>
        <script>
            let selectedCoordinates = {
                lat: 0,
                lng: 0
            };

            "use strict";

            function initMap() {
                const CONFIGURATION = {
                    "ctaTitle": "Checkout",
                    "mapOptions": { "center": { "lat": 39.9334, "lng": 32.8597 }, "fullscreenControl": true, "mapTypeControl": false, "streetViewControl": true, "zoom": 5, "zoomControl": true, "maxZoom": 35, "mapId": "" },
                    "mapsApiKey": "AIzaSyDZGMIJ_T7t1koK_uUE23_MeUziWworYvI",
                    "capabilities": { "addressAutocompleteControl": true, "mapDisplayControl": true, "ctaControl": true }
                };
                const componentForm = [
                    'location',
                    'locality',
                    'administrative_area_level_1',
                    'country',
                    'postal_code',
                ];

                const getFormInputElement = (component) => document.getElementById(component + '-input');
                const map = new google.maps.Map(document.getElementById("gmp-map"), {
                    zoom: CONFIGURATION.mapOptions.zoom,
                    center: { lat: 39.9334, lng: 32.8597 },
                    mapTypeControl: false,
                    fullscreenControl: CONFIGURATION.mapOptions.fullscreenControl,
                    zoomControl: CONFIGURATION.mapOptions.zoomControl,
                    streetViewControl: CONFIGURATION.mapOptions.streetViewControl
                });
                const marker = new google.maps.Marker({ map: map, draggable: true }); // 
                const autocompleteInput = getFormInputElement('location');
                const autocomplete = new google.maps.places.Autocomplete(autocompleteInput, {
                    fields: ["address_components", "geometry", "name"],
                    types: ["address"],
                });
                autocomplete.addListener('place_changed', function () {
                    marker.setVisible(false);
                    const place = autocomplete.getPlace();
                    if (!place.geometry) {
                        window.alert('No details available for input: \'' + place.name + '\'');
                        return;
                    }
                    renderAddress(place);
                    fillInAddress(place);

                    const latitude = place.geometry.location.lat();
                    const longitude = place.geometry.location.lng();
                    console.log('Selected Coordinates:', latitude, longitude);
                });

                function fillInAddress(place) {  // optional parameter
                    const addressNameFormat = {
                        'street_number': 'short_name',
                        'route': 'long_name',
                        'locality': 'long_name',
                        'administrative_area_level_1': 'short_name',
                        'country': 'long_name',
                        'postal_code': 'short_name',
                    };
                    const getAddressComp = function (type) {
                        for (const component of place.address_components) {
                            if (component.types[0] === type) {
                                return component[addressNameFormat[type]];
                            }
                        }
                        return '';
                    };
                    getFormInputElement('location').value = getAddressComp('street_number') + ' '
                        + getAddressComp('route');
                    for (const component of componentForm) {
                        // Location field is handled separately above as it has different logic.
                        if (component !== 'location') {
                             getFormInputElement(component).value = getAddressComp(component);
                        }
                    }
                }

                function renderAddress(place) {
                    map.setCenter(place.geometry.location);
                    map.setZoom(20);
                    marker.setPosition(place.geometry.location);
                    marker.setVisible(true);
                    selectedCoordinates.lat = place.geometry.location.lat();
                    selectedCoordinates.lng = place.geometry.location.lng();

                    // Gizli form alanlarını güncelle
                    document.getElementById("latitude-input").value = selectedCoordinates.lat;
                    document.getElementById("longitude-input").value = selectedCoordinates.lng;
                }


            }
        </script>
    </head>
    <body>
        <form method="post" action="@Url.Action("Kaydet","Test")">
            <div class="card-container">
                <div class="panel">
                    <div>
                        <img class="sb-title-icon" src="https://fonts.gstatic.com/s/i/googlematerialicons/location_pin/v5/24px.svg" alt="">
                        <span class="sb-title">Address Selection</span>
                    </div>

                    <input type="text" name="Adres" placeholder="Tam adresi giriniz" value=" Ay Sokak" id="location-input" />
                    <input type="text" placeholder="Apartman(Opsiyonel)" />
                    <input type="text" placeholder="Apartman(Opsiyonel)" />
                    <input type="text" placeholder="City" id="locality-input" />
                    <div class="half-input-container">
                        <input type="text" class="half-input" name="Sehir" placeholder="İl" value="İstanbul" id="administrative_area_level_1-input" />
                        <input type="text" class="half-input" name="PostaKodu" value="34520" placeholder="Zip/Postal code" id="postal_code-input" />
                    </div>
                    <input type="text" placeholder="Country" value="Türkiye" id="country-input" />
                    <input type="hidden" name="Latitude" id="latitude-input" value="">
                    <input type="hidden" name="Longitude" id="longitude-input" value="">
                    <button class="button-cta">Checkout</button>
                </div><div class="map" id="gmp-map"></div>
            </div>
        </form>   
    
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZGMIJ_T7t1koK_uUE23_MeUziWworYvI&libraries=places&callback=initMap&solution_channel=GMP_QB_addressselection_v1_cABC" async defer></script>
    </body>
    </html>